df$f1f2 <- interaction(df$1, df$2)
df
df$f1f2 <- interaction(df$f1, df$f2)
df
ggplot(aes(y = boxthis, x = f1f2), data = df) + geom_boxplot()
df <- data.frame(f1=factor(rbinom(100, 1, 0.45), label=c("m","w")),
f2=factor(rbinom(100, 1, 0.45), label=c("young","old")),
boxthis=rnorm(100))
df
ggplot(aes(y = boxthis, x = f1), data = df) + geom_boxplot()
install.packages("rJava")
library(rJava)
.jinit()
.jinit()
library(rJava)
.jinit()
install.packages("rJava")
install.packages("rJava")
clear
library(rJava)
.jinit()
javareconf
install.packages("rJava",type='source')
install.packages("rJava", type = "source")
remove.packages("rJava")
install.packages("rJava", type = "source")
library(rJava)
install.packages("rJava")
library(tidyr, quietly = TRUE)
install.packages(tidyr)
suppressMessages(library(tidyr))
install.packages("tidyr")
install.packages("dplyr")
library(tidyr, quietly = TRUE)
sestates <- read.csv("http://samplecsvs.s3.amazonaws.com/Sacramentorealestatetrans actions.csv", header = TRUE, stringsAsFactors = FALSE)
sestates <- read.csv("http://samplecsvs.s3.amazonaws.com/Sacramentorealestatetransactions.csv", header = TRUE, stringsAsFactors = FALSE)
sestates
head(sestates)
sestates
estates %>%
select(price, sq__ft) %>%
mutate(price_sq = price / sq__ft)
sestates %>% select(price, sq__ft) %>% mutate(price_sq = price / sq__ft)
head(sestates)
estates$price_sq <- estates$price / estates$sq__ft
sestates$price_sq <- estates$price / estates$sq__ft
sestates$price_sq <- sestates$price / sestates$sq__ft
sestates[, c("price_sq", "price", "sq__ft")]
head(sestates)
sestates[, c("price_sq", "price", "sq__ft")]
head(sestates[, c("price_sq", "price", "sq__ft")])
sestates <- read.csv("http://samplecsvs.s3.amazonaws.com/Sacramentorealestatetransactions.csv", header = TRUE, stringsAsFactors = FALSE)
sestates %>% select(price, sq__ft) %>%
mutate(price_sq = price / sq__ft)
suppressMessages(library(tidyr))
suppressMessages(library(dplyr))
sestates %>% select(price, sq__ft) %>% mutate(price_sq = price / sq__ft)
head(sestates %>% select(price, sq__ft) %>% mutate(price_sq = price / sq__ft))
head(sestates)
clear
summarise(sestates)
head(sestates)
head(sestates  %>% separate(sale_date, c("day_week","month","day_month"), " ", extra="drop", remove=TRUE))
head(sestates %>% group_by(city))
head(sestates %>% group_by(city) %>% summarise(n_trans = sum))
head(sestates %>% group_by(city) %>% summarise(n_trans = count(city, na.rm=TRUE)))
head(sestates %>% group_by(city) %>% summarise(n_trans = count(price, na.rm=TRUE)))
head(sestates %>% group_by(city) %>% summarise(n_trans = n()))
print(sestates %>% group_by(city) %>% summarise(n_trans = n()) %>% arrange(n_trans) , n=10)
print(sestates %>% group_by(city) %>% summarise(n_trans = n()) %>% arrange(desc(n_trans)), n=10)
sestates<- sestates %>% separate(sale_date, c("day_week","month","day_month"), " ", extra="drop", remove=TRUE)
sestates <- read.csv("http://samplecsvs.s3.amazonaws.com/Sacramentorealestatetransactions.csv", header = TRUE, stringsAsFactors = FALSE)
sestates %>% separate(sale_date, c("day_week","month","day_month"), " ", extra="drop", remove=TRUE)
sestates
sestates <- sestates %>% separate(sale_date, c("day_week","month","day_month"), " ", extra="drop", remove=TRUE)
head(sestates)
sestates
print(sestates %>% group_by(city) %>% summarise(n_trans = n()) %>% arrange(desc(n_trans)), n=10)
print(sestates %>% group_by(city) %>% summarise(n_trans = cumsum()) %>% arrange(desc(n_trans)), n=10)
print(sestates %>% group_by(city) %>% filter(city="SACRAMENTO") )
print(sestates %>% group_by(city) %>% filter(city="SACRAMENTO") , n=20)
print(sestates %>% group_by(city) %>% filter(sestates$city="SACRAMENTO") , n=20)
print(sestates %>% group_by(city) %>% filter(sestates$city, "SACRAMENTO") , n=20)
print(sestates %>% group_by(city) %>% filter(sestates, city == "SACRAMENTO") , n=20)
print(sestates %>% filter(sestates, city == "SACRAMENTO") , n=20)
print(sestates %>% filter(city="SACRAMENTO") )
print(sestates %>% filter(city=="SACRAMENTO") )
print(sestates %>% filter(city=="SACRAMENTO"), n=10 )
print(sestates %>% filter(city=="SACRAMENTO"), 10 )
print((sestates %>% filter(city=="SACRAMENTO")), n=10 )
sestates %>% filter(city=="SACRAMENTO"))
sestates %>% filter(city=="SACRAMENTO")
sestates %>% filter(city=="SACRAMENTO") %>% group_by(month, day_month)
sestates %>% filter(city=="SACRAMENTO") %>% group_by(month, day_month) %>% summarise(n_trans=n(), n_cumtrans=cumsum())
sestates %>% filter(city=="SACRAMENTO") %>% group_by(month, day_month) %>% summarise(n_trans=n(), n_cumtrans=cumsum(n_trans))
sestates %>% filter(city=="SACRAMENTO") %>% group_by(month, day_month) %>% summarise(n_trans=n(), n_cumtrans=cumsum(n()))
sestates %>% filter(city=="ELK GROVE") %>% group_by(month, day_month) %>% summarise(n_trans=n(), n_cumtrans=cumsum(n()))
sestates %>% filter(city=="ELK GROVE") %>% group_by(month, day_month) %>% summarise(n_trans=n()) %>% %>% summarise(n_cumtrans=cumsum(n_trans))
sestates %>% filter(city=="ELK GROVE") %>% group_by(month, day_month) %>% summarise(n_trans=n()) %>% summarise(n_cumtrans=cumsum(n_trans))
sestates %>% filter(city=="ELK GROVE") %>% group_by(month, day_month) %>% summarise(n_trans=n(), n_cumtrans=cumsum(n_trans))
sestates %>% filter(city=="ELK GROVE") %>% group_by(month, day_month) %>% summarise(n_trans=n()) %>% mutate(n_cumtrans=cumsum(n_trans))
sestates %>% filter(city=="ELK GROVE", month=="May", day_month %in% 15:21 ) %>% group_by(month, day_month) %>% summarise(n_trans=n()) %>% mutate(n_cumtrans=cumsum(n_trans))
sestates %>% filter(city=="ELK GROVE", month=="May", day_month %in% 15:20 ) %>% group_by(month, day_month) %>% summarise(n_trans=n()) %>% mutate(n_cumtrans=cumsum(n_trans))
sestates %>% group_by(type) %>% summarise(n_trans=n()) %>% top_n(10)
sestates %>% group_by(type, na.rm=TRUE)
sestates %>% group_by(type, na.rm=TRUE) %>% select(type, city, price)
sestates %>% group_by(type) %>% select(type, city, price)
sestates %>% group_by(type) %>% select(type, city, price) %>% top_n(n=3, wt=price)
sestates %>% group_by(type) %>% select(type, city, price) %>% top_n(n=3, wt=price) %>% arrange(type)
sestates %>% group_by(type) %>% select(type, city, price) %>% top_n(n=3, wt=price) %>% arrange(type, desc(price))
sestates %>% group_by(type) %>% select(type, city, price) %>% top_n(n=3, wt=price) %>% arrange(type, desc(price)) %>% filter(type %notin% "Unknown")
sestates %>% group_by(type) %>% select(type, city, price) %>% top_n(n=3, wt=price) %>% arrange(type, desc(price)) %>% filter(type %in% c("Condo", "Multi-Family", "Residential"))
summary(sestates %>% group_by(type) %>% select(type, city, price) %>% top_n(n=3, wt=price) %>% arrange(type, desc(price)) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")))
summary(sestates %>% group_by(type) %>% select(type, city, price) %>% top_n(n=3, wt=price) %>% arrange(type, desc(price)))
summary(sestates %>% group_by(type) %>% select(type, city, price) %>% top_n(n=3, wt=price) %>% arrange(type, desc(price), na.rm=TRUE))
summary(sestates %>% group_by(type) %>% select(type, city, price) %>% top_n(n=3, wt=price) %>% arrange(asc(type,na.rm=TRUE), desc(price)))
summary(sestates %>% group_by(type) %>% select(type, city, price) %>% top_n(n=3, wt=price) %>% arrange((type,na.rm=TRUE), desc(price)))
summary(sestates %>% group_by(type) %>% select(type, city, price) %>% top_n(n=3, wt=price) %>% arrange(type,na.rm=TRUE, desc(price)))
summary(sestates %>% group_by(type) %>% select(type, city, price) %>% top_n(n=3, wt=price) %>% arrange(type, desc(price)))
sestates %>% group_by(type) %>% select(type, city, price) %>% top_n(n=3, wt=price) %>% arrange((type,na.rm=TRUE), desc(price))
sestates %>% group_by(type) %>% select(type, city, price) %>% top_n(n=3, wt=price) %>% arrange(type, desc(price),na.rm=TRUE)
sestates %>% group_by(type) %>% select(type, city, price) %>% top_n(n=3, wt=price) %>% arrange(type, desc(price))
sestates %>% group_by(type) %>% na.omit() %>% select(type, city, price) %>% top_n(n=3, wt=price) %>% arrange(type, desc(price))
sestates %>% group_by(type) %>% select(type, city, price) %>% na.omit() %>% top_n(n=3, wt=price) %>% arrange(type, desc(price))
sestates %>% na.omit() %>% group_by(type) %>% select(type, city, price) %>% top_n(n=3, wt=price) %>% arrange(type, desc(price))
summarise(sestates)
sestates %>% summarise()
summary(sestates)
summary(sestates$type)
summary(sestates$price)
summary(sestates$sq__ft)
sestates %>% mutate(sq__ft = replace(sq__ft, sq_ft==0, NA))
sestates %>% replace(sestates$sq__ft, sq_ft==0, NA)
sestates %>% group_by(type) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% select(type, city, price) %>% top_n(n=3, wt=price) %>% arrange(type, desc(price))
sestates %>% replace(sq__ft, sq__ft==0, NA)
sestates %>% mutate(sq__ft, replace(sq__ft, sq__ft==0, NA))
head(sestates %>% mutate(sq__ft, replace(sq__ft, sq__ft==0, NA)))
head(sestates %>% mutate(sq__ft = replace(sq__ft, sq__ft==0, NA)))
tail(sestates %>% mutate(sq__ft = replace(sq__ft, sq__ft==0, NA)))
sestates <- sestates %>% mutate(sq__ft = replace(sq__ft, sq__ft==0, NA))
summary(sestates$sq__ft)
sestates %>% group_by(city) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% mutate(price_sq = sq__ft* price) %>% top_n(n=3, wt=price_sq) %>% arrange(type, desc(price_sq))
sestates %>% group_by(city) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% mutate(price_sq = sq__ft* price) %>% select(type, city, price_sq) %>% top_n(n=3, wt=price_sq) %>% arrange(type, desc(price_sq))
sestates %>% group_by(city) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% mutate(price_sq = sq__ft* price) %>% na.omit() %>% select(type, city, price_sq) %>% top_n(n=3, wt=price_sq) %>% arrange(type, desc(price_sq))
sestates %>% group_by(city) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% mutate(price_sq = sq__ft* price, na.rm=TRUE) %>% select(type, city, price_sq) %>% top_n(n=3, wt=price_sq) %>% arrange(type, desc(price_sq))
sestates %>% group_by(city) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% mutate(price_sq = sq__ft* price) %>% select(type, city, price_sq)
sestates %>% group_by(city) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% mutate(price_sq = sq__ft* price)
sestates %>% group_by(city) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% mutate(price_sq = price/sq__ft)
sestates %>% group_by(city) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% mutate(price_sq = price/sq__ft) %>% select(type, city, price_sq) %>% top_n(n=3, wt=price_sq) %>% arrange(type, desc(price_sq))
sestates %>% group_by(city) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% mutate(price_sq = price/sq__ft) %>% select(type, city, price_sq) %>% top_n(n=3, wt=price_sq)
sestates %>% group_by(city) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% mutate(price_sq = price/sq__ft) %>% select(type, city, price_sq) %>% top_n(n=3, wt=price_sq)
sestates %>% group_by(city) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% mutate(price_sq = price/sq__ft) %>% select(type, city, price_sq)
sestates %>% group_by(city) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% mutate(price_sq = price/sq__ft)
sestates %>% group_by(city) %>% filter(type %in% c("Condo", "Multi-Family", "Residential"))
sestates %>% group_by(city) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% top_n(n=3, wt=price_sq) %>% mutate(price_sq = price/sq__ft) %>% select(type, city, price_sq) %>% arrange(type, desc(price_sq))
sestates %>% mutate(price_sq = price/sq__ft) %>% group_by(city) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% top_n(n=3, wt=price_sq) %>% select(type, city, price_sq) %>% arrange(type, desc(price_sq))
sestates %>% mutate(price_sq = price/sq__ft) %>% group_by(city) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% select(type, city, price_sq) %>% arrange(type, desc(price_sq))
sestates %>% group_by(type) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% mutate(price_sq = price/sq__ft) %>% select(type, city, price_sq) %>% top_n(n=3, wt=price_sq) %>% arrange(type, desc(price_sq))
sestates %>% mutate(price_sq = price/sq__ft) %>% group_by(type) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% select(type, city, price_sq) %>% top_n(n=3, wt=price_sq) %>% arrange(type, desc(price_sq))
sestates %>% mutate(price_sq = price/sq__ft) %>% group_by(type) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% select(type, city, price_sq) %>% top_n(n=3, wt=price_sq)
sestates <- sestates %>% mutate(price_sq = price/sq__ft)
sestates %>% filter(city=="SACRAMENTO") %>% group_by(type) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% summarise(n_trans= n(), ave_price=mean(price), ave_price_sq = mean(price_sq))
sestates <- sestates %>% mutate(price_sq = price/sq__ft)
sestates %>% filter(city=="SACRAMENTO") %>% group_by(type) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% summarise(n_trans= n(), ave_price=mean(price), ave_price_sq = mean(price_sq, na.rm = TRUE))
sestates <- sestates %>% mutate(price_sq = price/sq__ft)
sestates %>% filter(city=="SACRAMENTO") %>% group_by(type) %>% filter(type %in% c("Condo", "Multi-Family", "Residential")) %>% summarise(n_trans= n(), ave_price=mean(price, na.rm = TRUE), ave_price_sq = mean(price_sq, na.rm = TRUE))
suppressMessages(library(lattice, quietly = TRUE))
suppressMessages(library(ggplot2, quietly = TRUE))
data(diamonds)
xyplot(price ~ carat | cut,
data = diamonds,
panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
lm1 <- lm(y ~ x)
panel.abline(a = lm1$coefficients[1],
b = lm1$coefficients[2])
},
as.table = TRUE)
```
data(diamonds)
p <- ggplot(diamonds, aes(x = carat, y=price))
p
p <- p + geom_point()
p
p + geom_smooth(lm(y ~ x))
p + geom_smooth(lm(x ~ y))
p + geom_smooth(method = "lm")
p + facet_grid(. ~ cut)
p<- p + geom_smooth(method = "lm")
p + facet_grid(. ~ cut)
p + facet_grid(. ~ cut, scales = "free", space = "free_x")
p + facet_grid(. ~ cut, scales = "free", space = "free_y")
p + facet_grid(cut ~ .)
----------
plastics <- read.csv("https://netfiles.umn.edu/users/nacht001/www/nachtsheim/5th/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR22.txt", header = TRUE, stringsAsFactors = FALSE)
plastics
plastics <- read.csv("https://netfiles.umn.edu/users/nacht001/www/nachtsheim/5th/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR22.txt", header = FALSE, stringsAsFactors = FALSE)
plastics
plastics <- read.csv("https://netfiles.umn.edu/users/nacht001/www/nachtsheim/5th/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR22.txt", col.names= c("Yi","Xi"), stringsAsFactors = FALSE)
plastics
plastics <- read.csv("https://netfiles.umn.edu/users/nacht001/www/nachtsheim/5th/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR22.txt", header = FALSE, stringsAsFactors = FALSE)
plastics
colnames(plastics) = c("Yi", "Xi")
colnames(plastics) = c("Yia", "Xis")
colnames(plastics)
plastics <- read.csv("https://netfiles.umn.edu/users/nacht001/www/nachtsheim/5th/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR22.txt", header = TRUE, stringsAsFactors = FALSE)
colnames(plastics) = c("Yi", "Xi")
plastics
colnames(plastics) = c("Yi", "Xi")
colnames(plastics)
plastics <- read.table("https://netfiles.umn.edu/users/nacht001/www/nachtsheim/5th/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR22.txt", header = TRUE, stringsAsFactors = FALSE)
plastics
colnames(plastics)
colnames(plastics) = c("Yi", "Xi")
plastics
plastics <- read.table("https://netfiles.umn.edu/users/nacht001/www/nachtsheim/5th/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR22.txt", header = TRUE, stringsAsFactors = FALSE)
colnames(plastics) = c("Yi", "Xi")
plastics
library(ggplot2)
p <- ggplot(plastics, aes(x = Xi, y=Yi))
p <- p + geom_point()
p <- p + geom_smooth(method = "lm")
p
summary(p)
lsfit(plastics$x, plastics$y, wt = NULL, intercept = TRUE)
p<- as.data.frame(plastics)
lsfit(p$x, p$y, wt = NULL, intercept = TRUE)
lsfit(p$x, p$y)
lsfit(plastics$Xi, plastics$Yi, wt = NULL, intercept = TRUE)
fir<- lm(plastics$Xi~ plastics$Yi)
fir
coef(lm(plastics$Xi~plastics$Yi))
coef(lsfit(plastics$Xi, plastics$Yi, wt = NULL, intercept = TRUE))
coef(lm(plastics$Yi~plastics$Xi))
lm(plastics$Yi~plastics$Xi))
lm(plastics$Yi~plastics$Xi)
lmp <- lm(plastics$Yi~plastics$Xi)
coef(lmp)
resid(lmp)
sum(resid(lmp))
residuals <- resid(lmp)
residuals
sum(residuals)
var(plastics)
sd(plastics)
sd(plastics$Xi, plastics$Yi)
sd(plastics$Xi, plastics$Yi, na.rm = NULL)
sd(plastics$Xi, plastics$Yi, na.rm = FALSE)
sd(plastics$Xi, plastics$Yi, na.rm = TRUE)
sd(plastics$Xi, plastics$Yi, na.rm = NULL)
sd(plastics$Xi, plastics$Yi)
sd(plastics$Xi, plastics$Yi, na.rm = FASLE)
sd(plastics$Xi, plastics$Yi, na.rm = TRUE)
sd(x=plastics$Xi, y=plastics$Yi, na.rm = TRUE)
sd(plastics$Xi, plastics$Yi)
sd(plastics$Yi)
var(plastics$Yi)
sqrt(335)
var(residuals)
plastics <- read.table("https://netfiles.umn.edu/users/nacht001/www/nachtsheim/5th/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR22.txt", header = TRUE, stringsAsFactors = FALSE)
colnames(plastics) = c("y", "x")
lmp <- lm(plastics$y~plastics$x)
coef(lmp)
plotlm <- ggplot(plastics, aes(x=x, y=y)) + geom_point() + geom_smooth(method = "lm")
plotlm
residuals <- resid(lmp)
residuals
sum(residuals)
var(residuals)
sd(residuals)
library(devtools)
help(predict.lm)
plastics <- read.table("https://netfiles.umn.edu/users/nacht001/www/nachtsheim/5th/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR22.txt", header = TRUE, stringsAsFactors = FALSE)
colnames(plastics) = c("y", "x")
lmp <- lm(plastics$y~plastics$x)
coef(lmp)
plastics
summary(lmp)
anova(lmp)
plot(lmp)
predict.lm(lmp, interval="confidence")
confint(lmp)
confint(lmp, level = 0.99)
confint(lmp, level = 99)
df(lmp)
df1(lmp)
lmp
coef(lmp)
summary(lmp)
sd(plastics)
confint(lmp, level = 0.99)
lmp$residuals
mean(lmp$residuals^2)
X <- model.matrix(lmp)
X
plastics
sigma2 <- sum((plastics$x - fitted(lmp))^2) / (nrow(X) - ncol(X))
sigma2
sqrt(sigma2)
sigma2 <- sum((plastics$y - fitted(lmp))^2) / (nrow(X) - ncol(X))
sigma2
sqrt(sigma2)
summary(lmp)
(lmp$fitted.values)
(lmp$df.residual)
(lmp$coefficients)
(lmp$coefficients[2])
(lmp$coefficients[0])
(lmp$effects)
(lmp$rank)
(lmp$terms)
mean(lmp$residuals^2)
summary(lmp)
sigma2 <- sum((plastics$x - fitted(lmp))^2) / (nrow(X) - ncol(X))
sigma2
sigma2 <- sum((plastics$y - fitted(lmp))^2) / (nrow(X) - ncol(X))
sigma2
?apply
mapply(rep, 1:4, 4:1)
Sapply(rep, 1:4, 4:1)
sapply(rep, 1:4, 4:1)
sapply(1:4, rep)
sapply(1:4, length)
sapply(1:4, sum)
sapply(1:4, `\`)
;
/
`
;
sapply(1:4, `-`)
sapply(1:4, `+`)
sapply(1:4, `*`)
sapply(1:4, `-`)
mapply(rep, 1:4, 4:1)
rep(1,4)
mapply(rep, 1:4, 4:3)
mapply(rep, 1:4, 4)
tapply(1:4, sum)
require(stats)
groups <- as.factor(rbinom(32, n = 5, prob = 0.4))
groups
tapply(groups, groups, length)
table(groups)
groups
presidents
cycle(presidents)
tapply(presidents, cycle(presidents), mean, na.rm = TRUE)
n <- 17; fac <- factor(rep(1:3, length = n), levels = 1:5)
table(fac)
fac
tapply(1:n, fac, sum)
?set.seeed
??set.seeed
?saveRDS
setwd("/Users/Shakti/Downloads/a6test")
read.csv("98redacted.csv.gz")
R.version
vignette(foeach)
vignette("foreach")
install.packages('randomForest')
vector
v<-c(0,1,2,3,4)
v(4)
v(3)
v(2)
v[2]
v
print(v)
v[1,]
v[1:]
v(1,)
v[1,)
v[1,length(v)]
v[1,length(v)-1]
v[2,length(v)-1]
v[2:length(v)-1]
v[2:length(v)]
#install.packages('randomForest')
library(randomForest)
require("plyr")
require(ggplot2)
require(reshape)
args = commandArgs(trailingOnly=TRUE)
if (length(args) < 2) {
stop("At least two arguments must be supplied (testDate, trainedData)", call.=FALSE)
}
print(args)
headers = c("year","month","carrier", "origin", "destination", "flightNumber", "flightDate", "dayOfMonth", "dayOfWeek", "hourOfDay", "crsDepTime", "crsElapsedTime", "distance", "daysTillNearestHoliday", "delay")
testData = read.table(args[1], header = FALSE, sep = "\t", col.names = headers)
trainData = lapply(args[2:length(args)] , function(x) read.table(x, header = FALSE, col.names = headers))
write(trainData, file=args[2])
write(testData, file=args[1])
setwd("~/Documents/CS6240/AirlinePrediction/")
#install.packages('randomForest')
library(randomForest)
require("plyr")
require(ggplot2)
require(reshape)
args = commandArgs(trailingOnly=TRUE)
if (length(args) < 2) {
stop("At least two arguments must be supplied (testDate, trainedData)", call.=FALSE)
}
print(args)
headers <- c("year","month","carrier", "origin", "destination", "flightNumber", "flightDate", "dayOfMonth", "dayOfWeek", "hourOfDay", "crsDepTime", "crsElapsedTime", "distance", "daysTillNearestHoliday", "delay")
testData <- read.table(args[1], header = FALSE, sep = "\t", col.names = headers)
trainData <- sapply(args[2:length(args)] , function(x) read.table(x, header = FALSE, col.names = headers))
popular <- c("ATL", "ORD", "DFW", "LAX", "DEN", "IAH", "PHX", "SFO", "CLT", "DTW", "MSP", "LAS", "MCO", "EWR", "JFK", "LGA", "BOS", "SLC", "SEA", "BWI", "MIA", "MDW", "PHL", "SAN", "FLL", "TPA", "DCA", "IAD", "HOU","??")
carriers <- c( "9E","AA","AS","B6","DL","US","UA","VX","WN","YV", "EV" ,"F9", "FL", "HA", "MQ", "OO")
swapAirport <- function ( a )  if ( a %in% popular ) a else "??"
setwd(".")
v[2,2]
v[2,3]
v[2]
v[2:2]
d <- d[ !is.na(d$dayOfWeek) ,]
s <- c(1,"0")
s
s <- c(1,1)
s
s <- c("1","0")
sapply(s, fn(x)x>0)
sapply(s, fn(x){x>0})
sapply(s, fn(x){return x>0})
sapply(s, fn(x) return x>0 )
sapply(s, fn(x) if(x>0) return 1 else return 0 )
lapply(s, fn(x)x>0)
lapply(s, sum)
source('~/Documents/CS6240/AirlinePrediction/PredictRandomForest.R', echo=TRUE)
a <- rep(c(NA, 1/0:3), 10)
table(a)
require(stats) # for rpois and xtabs
## Simple frequency distribution
table(rpois(100, 5))
require(stats) # for rpois and xtabs
## Simple frequency distribution
s<-table(rpois(100, 5))
as.data.frame(s)
p <- as.data.frame(s)
p["New"] = p$Var1 + p$Freq
p["New"] <- p$Var1 + p$Freq
p["New"] <- NA
p$New <- p$Var1 + p$Freq
p$New <- p$Var1+p$Freq
p$New <- as.numeric(p$Var1)+as.numeric(p$Freq)
p
p$New <- as.character(p$Var1)+"_" +as.character(p$Freq)
p$New <- paste(as.character(p$Var1),"_",as.character(p$Freq))
p
require(stats) # for rpois and xtabs
## Simple frequency distribution
s<-table(rpois(100, 5))
p["New"] = p$Var1 + p$Freq
p$New <- as.character(p$Var1)+"_" +as.character(p$Freq)
p$New <- paste(as.character(p$Var1),"_",as.character(p$Freq))
s
require(stats) # for rpois and xtabs
## Simple frequency distribution
clear
s<-table(rpois(100, 5), colnames("a","b","c","d","e","f","g","h","i","j","k"))
s<-table(rpois(100, 5), colnames("a","b"))
s
s<-table(rpois(100, 5), colnames = c("a","b"))
s<-table(rpois(100, 5), colnames = c("a","b","c","d","e","f","g","h","i","j","k"))
first <- ddply(baseball, "id", summarise, first = min(year))
system.time(b2 <- merge(baseball, first, by = "id", all.x = TRUE))
system.time(b3 <- join(baseball, first, by = "id))
;
.
q
()
p
D
[]
'a;sdf';asdfn'aoiwerhqyy04h515'
lq4hi545rwoaszc70ph';QWL[1[2-3123'
`
``````
first <- ddply(baseball, "id", summarise, first = min(year))
system.time(b2 <- merge(baseball, first, by = "id", all.x = TRUE))
system.time(b3 <- join(baseball, first, by = "id))
system.time(b3 <- join(baseball, first, by = "id"))
s
s["R"] <- s$1
diamonds
diamonds["R"] <- diamonds$cut
diamonds
x<-table(1:10)
x
x[0]
x[1]
x$1
x[[1]
x[[1]]
x[[1]]
x[[1][1]]
x<-table(1:10, 4:13)
x
x[[1][1]]
x[[1]]
x[[4]]
x[[34]]
x[[44]]
x[[144]]
Jaunary       | 188659       |99289         | 89370        | 88969        | 333          | 0.9          | 0           | 0.47         |
Jaunary       | 188659       |99289         | 89370        | 88969        | 333          | 0.9          | 0           | 0.47         |
Jaunary       | 188659       |99289         | 89370        | 88969        | 333          | 0.9          | 0           | 0.47         |
Jaunary       | 188659       |99289         | 89370        | 88969        | 333          | 0.9          | 0           | 0.47         |
Jaunary       | 188659       |99289         | 89370        | 88969        | 333          | 0.9          | 0           | 0.47         |
Jaunary       | 188659       |99289         | 89370        | 88969        | 333          | 0.9          | 0           | 0.47         |
Jaunary       | 188659       |99289         | 89370        | 88969        | 333          | 0.9          | 0           | 0.47         |
Jaunary       | 188659       |99289         | 89370        | 88969        | 333          | 0.9          | 0           | 0.47         |
Jaunary       | 188659       |99289         | 89370        | 88969        | 333          | 0.9          | 0           | 0.47         |
